# Remove all keybindings
unbind-key -a

# Easy config reload
bind -N "Reload tmux config" r source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config reloaded"

# Use Ctrl+A for the prefix.
# unbind C-b
set-option -g prefix  C-a
bind C-a send-prefix

# Use Ctrl+F and Ctrl+J for the prefix
# set-option -g prefix  C-j
# set-option -g prefix2 C-f
#
# unbind C-j
# bind C-j send-prefix

#================================================
# Copy Mode/Buffer
#================================================

# Enter copy mode
bind -N "Enter copy mode" [ copy-mode

# Key bindings for copy-paste and selection
bind -N "Paste the most recent paste buffer" p paste-buffer
bind -N "Begin the selection in copy mode" -T copy-mode-vi 'v' send -X begin-selection
bind -N "Toggle the rectangle selection in copy mode" -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -N "Yank/Copy the selection in copy mode" -T copy-mode-vi 'y' send -X copy-selection-and-cancel # 'xclip -in -selection clipboard'

# Choose a paste buffer from a list
bind -N "Choose a paste buffer from a list" = choose-buffer -Z

#================================================
# Sessions (and Clients)
#================================================

# Open tmux session list
bind -N "Open tmux session list" s choose-tree -Zs -O time -F "#{session_windows}"

# Delete sessions with 'd' inside the session list
bind -N "Delete sessions with 'd' inside the session list" -n d \
    if -F '#{==:#{pane_mode},tree-mode}' 'send x' 'send d'

# Delete tagged sessions with 'D' inside the session list
bind -N "Delete tagged sessions with 'D' inside the session list" -n D \
    if -F '#{==:#{pane_mode},tree-mode}' 'send X' 'send D'

# Rename session
bind -N "Rename current session" '$' command-prompt "rename-session %%%"

# Choose client
# bind -N "Choose a client from a list" c choose-client -Z

# Detach the current client
bind -N "Detach the current client" d detach

# Switch to previous client
bind -N "Switch to previous client" ( switch-client -p

# Switch to next client
bind -N "Switch to next client" ) switch-client -n

# Switch to the last client
bind -N "Switch to the last client" Space switch-client -l

# Search sessions using an fzf menu
# Found this code here:
# https://github.com/majjoha/dotfiles/blob/main/.config/tmux/tmux.conf
# https://github.com/majjoha/dotfiles/blob/b184b5e5c46974d3b1278c6630afd154e9af2b08/.config/tmux/tmux.conf
bind -N "Search sessions using an fzf menu" S display-popup -E -w 75% -h 75% "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
    xargs tmux switch-client -t"

#================================================
# Windows
#================================================

# Create new window
bind -N "Create a new window" C-n new-window

# Kill window
bind -N "Kill current window" & confirm-before -p "kill-window? (y/n)" kill-window

# Rename window
bind -N "Rename current window" , command-prompt "rename-window '%%'"

# Choose window
# bind -N "Choose a window from a list" w choose-tree -Zw

# Go to (next/previous) window
bind -N "Go to the previous window" -n M-Left  previous-window
bind -N "Go to the next window"     -n M-Right next-window

bind -N "Go to the previous window" -n M-p previous-window
bind -N "Go to the next window"     -n M-n next-window

# Easily reorder windows with Ctrl+Shift+Arrow
bind -N "Swap with the previous window" -n C-M-Left  swap-window -t -1 \; select-window -t -1
bind -N "Swap with the next window"     -n C-M-Right swap-window -t +1 \; select-window -t +1

bind -N "Swap with the previous window" -n C-M-p  swap-window -t -1 \; select-window -t -1
    bind -N "Swap with the next window"     -n C-M-n swap-window -t +1 \; select-window -t +1

# Go to window by index
bind -N "Select window 1" -n M-1 select-window -t :=1
bind -N "Select window 2" -n M-2 select-window -t :=2
bind -N "Select window 3" -n M-3 select-window -t :=3
bind -N "Select window 4" -n M-4 select-window -t :=4
bind -N "Select window 5" -n M-5 select-window -t :=5
bind -N "Select window 6" -n M-6 select-window -t :=6
bind -N "Select window 7" -n M-7 select-window -t :=7
bind -N "Select window 8" -n M-8 select-window -t :=8
bind -N "Select window 9" -n M-9 select-window -t :=9

#================================================
# Panes
#================================================

# Easier window split keys (plus opening in the current directory)
bind -N "Split window horizontally in the current path" h split-window -h -c "#{pane_current_path}"
bind -N "Split window vertically in the current path"   v split-window -v -c "#{pane_current_path}"

# Join pane
bind -N "Join pane horizontally" -n M-. join-pane -h
bind -N "Join pane vertically" -n M-, join-pane -v

# Vim-like keys and alt arrow to switch panes
# obs: Not necessary anymore because of vim-tmux-navigator
# bind -N "Move to the pane above"        -rn C-Up    select-pane -U
# bind -N "Move to the pane below"        -rn C-Down  select-pane -D
# bind -N "Move to the pane on the left"  -rn C-Left  select-pane -L
# bind -N "Move to the pane on the right" -rn C-Right select-pane -R
#
# bind -N "Move to the pane above"        -rn C-k select-pane -U
# bind -N "Move to the pane below"        -rn C-j select-pane -D
# bind -N "Move to the pane on the left"  -rn C-h select-pane -L
# bind -N "Move to the pane on the right" -rn C-l select-pane -R

# Resize panes
bind -N "Resize panes up by 5"            -rn M-Up    resize-pane -U 5
bind -N "Resize panes down by 5"          -rn M-Down  resize-pane -D 5
bind -N "Resize panes to the left by 10"  -rn M-Left  resize-pane -L 10
bind -N "Resize panes to the right by 10" -rn M-Right resize-pane -R 10

bind -N "Resize panes up by 5"            -rn M-k resize-pane -U 5
bind -N "Resize panes down by 5"          -rn M-j resize-pane -D 5
bind -N "Resize panes to the left by 10"  -rn M-h resize-pane -L 10
bind -N "Resize panes to the right by 10" -rn M-l resize-pane -R 10

# Go to pane by index
bind -N "Select pane 1" -n 'M-!' select-pane -t 1
bind -N "Select pane 2" -n 'M-@' select-pane -t 2
bind -N "Select pane 3" -n 'M-#' select-pane -t 3
bind -N "Select pane 4" -n 'M-$' select-pane -t 4
bind -N "Select pane 5" -n 'M-%' select-pane -t 5
bind -N "Select pane 6" -n 'M-Â¨' select-pane -t 6
bind -N "Select pane 7" -n 'M-&' select-pane -t 7
bind -N "Select pane 8" -n 'M-*' select-pane -t 8
bind -N "Select pane 9" -n 'M-(' select-pane -t 9

# Display pane numbers
bind -N "Display pane numbers" q display-panes

# Select the next pane
# bind -N "Go to the next pane" o select-pane -t +1

# Rotate through the panes
bind -N "Rotate through the panes" C-o rotate-window

# Spread panes out evenly
bind -N "Spread panes out evenly" e select-layout -E

# Synchronize panes
bind -N "Synchronize panes" y set-window-option synchronize-panes \; display-message "synchronize mode toggled"

# Move the active pane into a new window
bind -N "Move the active pane into a new window" ! break-pane

# Toggle fullscreen on the active pane
bind -N "Toggle fullscreen on the active pane" M resize-pane -Z

# Kill the active pane
bind -N "Kill the active pane" x kill-pane
# bind -N "Kill the active pane" x confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Mark/unmark pane
bind -N "Mark/unmark pane" -n M-m if -F '#{pane_marked}' {
    select-pane -M # unmark
} {
    select-pane -m # mark
}

#================================================
# Miscellaneous
#================================================

# Open a popup window with the scratch session
bind -N "Open a popup window with the scratch session" p if -F '#{==:#{session_name},scratch}' {
    detach-client
} {
    popup -w "80%" -h "90%" -E "tmux new-session -A -s scratch"
}

# List keys
bind -N "List of key bindings" ? popup -w "80%" -h "90%" -E "tmux list-keys -N | less"

# Describe key binding
bind -N "List all the key bindings with detail" / popup -w "80%" -h "90%" -E "tmux list-keys | less"
# bind -N "Describe a single key binding" / command-prompt -k -p key "list-keys -1N '%%%'"

# Open the popup window to work on the tmux config
bind -N "Open tmux config on a popup window" c popup -w "80%" -h "90%" -E "cd ~/.config/tmux && nvim ."

# Open Lazy Docker
bind -N "Open lazydocker" C-d popup -w "80%" -h "90%" -E -d "#{pane_current_path}" "lazydocker"

# Open Lazy git
bind -N "Open lazygit" C-g popup -w "80%" -h "90%" -E -d "#{pane_current_path}" "lazygit"

# Prompt
bind -N "Open the command prompt" : command-prompt

# Toggle status bar
bind -N "Toggle status bar" b set-option -g status

# Clock mode (tmux builtin)
# bind -N "Open clock mode" t clock-mode

# from https://scripter.co/command-to-every-pane-window-session-in-tmux/
# Send the same command to all panes/windows/sessions
bind -N "Synchronize panes, windows and sessions" E command-prompt -p "Command:" \
    "run \"tmux list-panes -a -F '##{session_name}:##{window_index}.##{pane_index}' \
    | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Send the same command to all panes/windows in current session
bind -N "Synchronize panes and windows" C-e command-prompt -p "Command:" \
    "run \"tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' \
    | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Window menu
bind -N "Window menu" < display-menu -T "#[align=centre]#{window_index}:#{window_name}" -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l "swap-window -t:-1" "#{?#{>:#{session_windows},1},,-}Swap Right" r "swap-window -t:+1" "#{?pane_marked_set,,-}Swap Marked" s swap-window '' Kill X kill-window Respawn R "respawn-window -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" Rename n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" '' "New After" w "new-window -a" "New At End" W new-window

# Panel menu
bind -N "Panel menu" > display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < "send -X history-top" "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > "send -X history-bottom" '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "if -F \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}\" \"copy-mode -t=\" ; send -Xt= search-backward \"#{q:mouse_word}\"" "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y "copy-mode -q ; send-keys -l -- \"#{q:mouse_word}\"" "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c "copy-mode -q ; set-buffer -- \"#{q:mouse_word}\"" "#{?mouse_line,Copy Line,}" l "copy-mode -q ; set-buffer -- \"#{q:mouse_line}\"" '' "Horizontal Split" h "split-window -h" "Vertical Split" v "split-window -v" '' "#{?#{>:#{window_panes},1},,-}Swap Up" u "swap-pane -U" "#{?#{>:#{window_panes},1},,-}Swap Down" d "swap-pane -D" "#{?pane_marked_set,,-}Swap Marked" s swap-pane '' Kill X kill-pane Respawn R "respawn-pane -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z "resize-pane -Z"
